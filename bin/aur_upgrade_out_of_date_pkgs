#!/bin/bash

TMPFILE="$(mktemp)"
UPGRADE="${UPGRADE:-true}"

print_divider() {
    echo "#####################################################################"
}

if ! command -v package-query &> /dev/null
then
    echo "package-query could not be found"
    exit
fi

pacman -Qm > "${TMPFILE}"
# cat "${TMPFILE}"
print_divider


get_local_version() {
    local_pkg_name="${1}"
    if [ -n "${local_pkg_name}" ]; then
        pacman -Qi "${local_pkg_name}" | rg Version | xargs | cut -d' ' -f3
    fi
}

get_aur_version() {
    aur_pkg_name="${1}"
    if [ -n "${aur_pkg_name}" ]; then
        curl -s https://aur.archlinux.org/rpc/v5/info/"${aur_pkg_name}" | jq -r '.results[0].Version'
    fi
}

list_of_pkgs="$(cut -d' ' -f1 "${TMPFILE}" | xargs)"
echo "DEBUG: list_of_pkgs: ${list_of_pkgs}"



#while read -r line; do
#    pkg_name="$(echo "${line}" | xargs | cut -d' ' -f1)"
#    echo "line: ${line}"
#    echo "pkg_name: ${pkg_name}"
#
#    local_version="$(get_local_version "${pkg_name}")"
#    aur_version="$(get_aur_version "${pkg_name}")"
#
#    if [ "${local_version}" != "${aur_version}" ]; then
#        #package-query --aur --upgrades "${pkg_name}"
#        sleep 1
#        if [ "${UPGRADE}" == "true" ]; then
#            aur_upgrade_pkg "${pkg_name}"
#        fi
#        print_divider
#    fi
#done <"${TMPFILE}"


echo "DEBUG: TMPFILE: ${TMPFILE}"
#rm "${TMPFILE}"
