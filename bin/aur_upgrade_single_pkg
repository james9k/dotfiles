#!/bin/bash

DEBUG="${DEBUG:-false}"
AUR_DIR="${HOME}/aur"
PKGEXT=".pkg.tar.lz4"  # Override the compression type
#PKGEXT=".pkg.tar.zst"  # Copied from /etc/makepkg.conf
export PKGEXT
PKG_NAME="${1}"
TARBALL="${PKG_NAME}.tar.gz"

if [ "${DEBUG}" == "true" ]; then
    set -x
fi

usage() {
    printf "\nUsage: %s PKG_NAME\n" "$(basename $"0")"
    printf "\nExample:\n %s slack-desktop\n" "$(basename $"0")"
}

if [ -z "${PKG_NAME}" ]; then
    printf "\nPKG_NAME is required\n"
    usage
    exit 1
fi

printf "Working directory: %s\n" "${AUR_DIR}"
mkdir -p "${AUR_DIR}"
cd "${AUR_DIR}" || exit 1

echo "Removing old files"
rm -rf "${PKG_NAME}"*


# Get snapshot URL
snapshot_path=$(curl -s "https://aur.archlinux.org/rpc/v5/info?arg[]=${PKG_NAME}" | jq -r '.results[].URLPath')
# /cgit/aur.git/snapshot/libanjuta.tar.gz
wget "https://aur.archlinux.org${snapshot_path}"


if [ -f "${TARBALL}" ]; then
    echo "Unpacking ${TARBALL}"
    tar xvf "${TARBALL}"
    cd "${PKG_NAME}" || exit 1

    makepkg

    PKG_FILENAME=$(ls -1 ${PKG_NAME}*${PKGEXT} | grep -v debug)
    echo "Package file: ${PKG_FILENAME}"
    if [ -f "${PKG_FILENAME}" ]; then
        echo "Installing ${PKG_FILENAME} ..."
        sudo pacman -U --noconfirm "./${PKG_FILENAME}"
    else
        echo "${PKG_FILENAME} not found !"
        exit 1
    fi
fi

if [ "${DEBUG}" == "true" ]; then
    set +x
fi
