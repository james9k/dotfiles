# Turn on profiling
#zmodload zsh/zprof

HISTFILE=~/.histfile
HISTSIZE=10000
SAVEHIST=9000
setopt APPEND_HISTORY
# 2019-04-27 - disabled in attempt to keep history sequence in tact
#setopt SHARE_HISTORY
setopt EXTENDED_HISTORY
setopt HIST_EXPIRE_DUPS_FIRST
setopt HIST_IGNORE_ALL_DUPS
setopt HIST_IGNORE_DUPS
setopt HIST_IGNORE_SPACE
unsetopt beep
bindkey -e
# End of lines configured by zsh-newuser-install
# The following lines were added by compinstall
#zstyle :compinstall filename "${HOME}/.zshrc"

# Command completion
autoload -Uz compinit
compinit

autoload -U +X bashcompinit && bashcompinit

# Config GRML Zsh
autoload -U colors && colors
zstyle ':vcs_info:*' enable git
zstyle ':vcs_info:*' check-for-changes true
zstyle ':vcs_info:*' unstagedstr '!'
zstyle ':vcs_info:*' stagedstr '+'
zstyle ':vcs_info:git*' formats "%{${fg[cyan]}%}[%{${fg[yellow]}%}%b%{${fg[yellow]}%}%m%u%c%{${fg[cyan]}%}]%{$reset_color%}"
zstyle ':prompt:grml:*:items:host' pre '%F{green}'
zstyle ':prompt:grml:*:items:host' post '%f'
zstyle ':prompt:grml:*:items:path' pre '%F{blue}'
zstyle ':prompt:grml:*:items:path' post '%f'
zstyle ':prompt:grml:left:setup' items rc change-root host path virtual-env vcs percent

function virtual_env_prompt () {
    REPLY=${VIRTUAL_ENV+(${VIRTUAL_ENV:t}) }
}

grml_theme_has_token virtual-env || grml_theme_add_token virtual-env -f virtual_env_prompt '%F{magenta}' '%f'

# Key Bindings
bindkey '\e[3~' delete-char  # delete
if [ "${TERM}" = "linux" ]; then
    bindkey '\e[1~' beginning-of-line  # Home
    bindkey '\e[4~' end-of-line  # End
elif [ "${TERM}" = "xterm-256color" ]; then
    bindkey '\e[H' beginning-of-line  # Home
    bindkey '\e[F' end-of-line  # End
fi

# To Set PATH see ~/.zshenv

# Aliases
if [ -f ~/.zsh_aliases ]; then
    source ~/.zsh_aliases
fi

# Command completion
# git tab completion handled by autoload of compinit

# AWS
if [ -e /usr/bin/aws_zsh_completer.sh ]; then
    source /usr/bin/aws_zsh_completer.sh
elif [ -e "/usr/local/share/zsh/site-functions/aws_zsh_completer.sh" ]; then
    source /usr/local/share/zsh/site-functions/aws_zsh_completer.sh
fi

# Kubernetes
#type kubectl > /dev/null && source <(kubectl completion zsh)
whence minikube > /dev/null && source "${HOME}/.dotfiles/completion/minikube-zsh"
#type kops > /dev/null && source <(kops completion zsh)

# Hashicorp
whence terraform > /dev/null && complete -o nospace -C $(whence terraform) terraform
#type vault > /dev/null && complete -o nospace -C /usr/bin/vault vault

# Python
if [ -e /usr/bin/virtualenvwrapper_lazy.sh ]; then
    source /usr/bin/virtualenvwrapper_lazy.sh
elif [ -e /usr/bin/virtualenvwrapper.sh ]; then
    source /usr/bin/virtualenvwrapper.sh
fi

if [ "$(uname)" = "Linux" ]; then
    # SSH Agent
    type keychain > /dev/null && eval $(keychain --eval --quick --quiet id_rsa)

    if [ -f "/usr/share/fzf/key-bindings.zsh" ]; then
        source /usr/share/fzf/key-bindings.zsh  # Arch Linux
    fi

    RANGER_BIN="/usr/bin/ranger"


elif [ "$(uname)" = "Darwin" ]; then
    export FZF_DEFAULT_COMMAND='fd --type f --color=never'
    export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"
    source $(brew --prefix)/opt/fzf/shell/key-bindings.zsh

    RANGER_BIN="$(brew --prefix)/bin/ranger"
fi

ranger() {
    # Prevent ranger inception

    if [ -z "$RANGER_LEVEL" ]; then
        "${RANGER_BIN}" "$@"
    else
        exit
    fi
}

export EDITOR="nvim"

# Turn off profiling
#zprof
